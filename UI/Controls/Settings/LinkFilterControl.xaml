<UserControl
    x:Class="GetStoreApp.UI.Controls.Settings.LinkFilterControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Expander Style="{StaticResource ExpanderSettingsStyle}">
        <Expander.Header>
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <FontIcon
                    FontFamily="Segoe Fluent Icons"
                    Glyph="&#xE71c;"
                    Style="{StaticResource FontIconStyle}" />

                <StackPanel
                    Grid.Column="1"
                    Margin="0,12"
                    Orientation="Vertical">

                    <TextBlock
                        VerticalAlignment="Center"
                        Style="{StaticResource BodyTextBlockStyle}"
                        Text="{x:Bind ResourceService.GetLocalized('/Settings/LinkFilter')}" />

                    <TextBlock
                        VerticalAlignment="Center"
                        Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                        Style="{StaticResource CaptionTextBlockStyle}"
                        Text="{x:Bind ResourceService.GetLocalized('/Settings/LinkFilterDescription')}" />
                </StackPanel>

                <Button Grid.Column="2" Content="{x:Bind ResourceService.GetLocalized('/Settings/LinkFilterInstruction')}">
                    <Button.Flyout>
                        <Flyout>
                            <StackPanel Width="350">
                                <Grid Margin="0,0,0,12">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="75" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock
                                        Grid.Column="0"
                                        FontSize="13"
                                        Style="{ThemeResource CaptionTextBlockStyle}"
                                        Text="{x:Bind ResourceService.GetLocalized('/Settings/StartsWithEInstruction')}" />
                                    <Button
                                        Grid.Column="1"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center"
                                        Command="{x:Bind ViewModel.StartsWithECommand}"
                                        Content="{x:Bind ResourceService.GetLocalized('/Settings/StartsWithEButton')}" />
                                </Grid>

                                <MenuFlyoutSeparator />

                                <Grid Margin="0,12,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="75" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock
                                        Grid.Column="0"
                                        FontSize="13"
                                        Style="{ThemeResource CaptionTextBlockStyle}"
                                        Text="{x:Bind ResourceService.GetLocalized('/Settings/BlockMapInstruction')}" />
                                    <Button
                                        Grid.Column="1"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center"
                                        Command="{x:Bind ViewModel.BlockMapCommand}"
                                        Content="{x:Bind ResourceService.GetLocalized('/Settings/BlockMapButton')}" />
                                </Grid>
                            </StackPanel>
                        </Flyout>
                    </Button.Flyout>
                </Button>
            </Grid>
        </Expander.Header>

        <Expander.Content>
            <StackPanel Padding="27,0,0,0" HorizontalAlignment="Stretch">
                <StackPanel>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="0" Orientation="Vertical">
                            <TextBlock
                                VerticalAlignment="Center"
                                Style="{StaticResource BodyTextBlockStyle}"
                                Text="{x:Bind ResourceService.GetLocalized('/Settings/StartsWithE')}" />
                            <TextBlock
                                Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                                Style="{StaticResource CaptionTextBlockStyle}"
                                Text="{x:Bind ResourceService.GetLocalized('/Settings/StartsWithEDescription')}" />
                        </StackPanel>

                        <ToggleSwitch
                            x:Name="StartsWithEToggleSwitch"
                            Grid.Column="1"
                            FlowDirection="RightToLeft"
                            IsOn="{x:Bind ViewModel.StartsWithEFilterValue, Mode=OneWay}"
                            OffContent="{x:Bind ResourceService.GetLocalized('/Settings/StartsWithEOffContent')}"
                            OnContent="{x:Bind ResourceService.GetLocalized('/Settings/StartsWithEOnContent')}">

                            <i:Interaction.Behaviors>
                                <ic:EventTriggerBehavior EventName="Toggled">
                                    <ic:InvokeCommandAction Command="{x:Bind ViewModel.StartWithEFilterCommand}" CommandParameter="{Binding ElementName=StartsWithEToggleSwitch, Path=IsOn}" />
                                </ic:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </ToggleSwitch>
                    </Grid>
                </StackPanel>

                <MenuFlyoutSeparator Margin="0,6" />

                <StackPanel>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="0" Orientation="Vertical">
                            <TextBlock
                                VerticalAlignment="Center"
                                Style="{StaticResource BodyTextBlockStyle}"
                                Text="{x:Bind ResourceService.GetLocalized('/Settings/BlockMap')}" />
                            <TextBlock
                                Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                                Style="{StaticResource CaptionTextBlockStyle}"
                                Text="{x:Bind ResourceService.GetLocalized('/Settings/BlockMapDescription')}" />
                        </StackPanel>

                        <ToggleSwitch
                            x:Name="BlockMapToggleSwitch"
                            Grid.Column="1"
                            FlowDirection="RightToLeft"
                            IsOn="{x:Bind ViewModel.BlockMapFilterValue, Mode=OneWay}"
                            OffContent="{x:Bind ResourceService.GetLocalized('/Settings/BlockMapOffContent')}"
                            OnContent="{x:Bind ResourceService.GetLocalized('/Settings/BlockMapOnContent')}">

                            <i:Interaction.Behaviors>
                                <ic:EventTriggerBehavior EventName="Toggled">
                                    <ic:InvokeCommandAction Command="{x:Bind ViewModel.BlockMapFilterCommand}" CommandParameter="{Binding ElementName=BlockMapToggleSwitch, Path=IsOn}" />
                                </ic:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </ToggleSwitch>
                    </Grid>
                </StackPanel>
            </StackPanel>
        </Expander.Content>
    </Expander>
</UserControl>
