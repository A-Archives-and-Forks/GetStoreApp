<UserControl
    x:Class="GetStoreApp.UI.Controls.Home.HistoryItemControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ctWinUI="using:CommunityToolkit.WinUI.UI.Controls"
    xmlns:service="using:GetStoreApp.Services.Settings"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    mc:Ignorable="d">

    <i:Interaction.Behaviors>
        <ic:EventTriggerBehavior EventName="Loaded">
            <ic:InvokeCommandAction Command="{x:Bind ViewModel.LoadedCommand}" />
        </ic:EventTriggerBehavior>
    </i:Interaction.Behaviors>

    <Expander
        Margin="0,0,0,10"
        IsExpanded="True"
        Style="{StaticResource DefaultExpanderStyle}">

        <Expander.Header>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <FontIcon
                    Grid.Column="0"
                    FontFamily="Segoe Fluent Icons"
                    Glyph="&#xE823;"
                    Style="{StaticResource FontIconStyle}" />
                <TextBlock
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    Text="{x:Bind service:LanguageService.GetResources('/Home/Recent')}" />
                <CommandBar
                    Grid.Column="2"
                    Margin="0,0,-15,0"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    DefaultLabelPosition="Right">
                    <AppBarButton
                        Command="{x:Bind ViewModel.FillinCommand}"
                        Icon="Up"
                        IsEnabled="{x:Bind ViewModel.SelectedHistoryItem, Converter={StaticResource CheckNullConverter}, Mode=OneWay}"
                        Label="{x:Bind service:LanguageService.GetResources('/Home/Fillin')}"
                        ToolTipService.ToolTip="{x:Bind service:LanguageService.GetResources('/Home/FillinDescription')}"
                        Visibility="{x:Bind ViewModel.HistoryItemList.Count, Converter={StaticResource IntToVisibilityConverter}, Mode=OneWay}" />
                    <AppBarButton
                        Command="{x:Bind ViewModel.ViewAllCommand}"
                        Icon="ViewAll"
                        Label="{x:Bind service:LanguageService.GetResources('/Home/ViewAll')}" />
                </CommandBar>
            </Grid>
        </Expander.Header>

        <Expander.Content>
            <Grid>
                <TextBlock
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Text="{x:Bind service:LanguageService.GetResources('/Home/HistoryItemEmpty')}"
                    TextAlignment="Center"
                    Visibility="{x:Bind ViewModel.HistoryItemList.Count, Converter={StaticResource IntToReverseVisibilityConverter}, Mode=OneWay}" />

                <ctWinUI:DataGrid
                    ItemsSource="{x:Bind ViewModel.HistoryItemList, Mode=OneWay}"
                    RowStyle="{StaticResource DataGridRowStyle}"
                    SelectedItem="{x:Bind ViewModel.SelectedHistoryItem, Mode=TwoWay}"
                    Style="{StaticResource DataGridHistoryItemStyle}"
                    Visibility="{x:Bind ViewModel.HistoryItemList.Count, Converter={StaticResource IntToVisibilityConverter}, Mode=OneWay}">

                    <i:Interaction.Behaviors>
                        <ic:EventTriggerBehavior EventName="DoubleTapped">
                            <ic:InvokeCommandAction Command="{x:Bind ViewModel.FillinCommand}" />
                        </ic:EventTriggerBehavior>
                    </i:Interaction.Behaviors>

                    <ctWinUI:DataGrid.Columns>
                        <ctWinUI:DataGridTextColumn
                            Width="*"
                            Binding="{Binding HistoryType, Converter={StaticResource TypeNameConverter}}"
                            Header="{x:Bind service:LanguageService.GetResources('/Home/Type')}"
                            HeaderStyle="{StaticResource DataGridColumnHeaderStyle}" />
                        <ctWinUI:DataGridTextColumn
                            Width="*"
                            Binding="{Binding HistoryChannel, Converter={StaticResource ChannelNameConverter}}"
                            Header="{x:Bind service:LanguageService.GetResources('/Home/Channel')}"
                            HeaderStyle="{StaticResource DataGridColumnHeaderStyle}" />
                        <ctWinUI:DataGridTextColumn
                            Width="3*"
                            Binding="{Binding HistoryLink}"
                            Header="{x:Bind service:LanguageService.GetResources('/Home/Link')}"
                            HeaderStyle="{StaticResource DataGridColumnHeaderStyle}" />
                    </ctWinUI:DataGrid.Columns>

                    <ctWinUI:DataGrid.ContextFlyout>
                        <MenuFlyout>
                            <MenuFlyoutItem
                                Command="{x:Bind ViewModel.FillinCommand}"
                                IsEnabled="{x:Bind ViewModel.SelectedHistoryItem, Converter={StaticResource CheckNullConverter}, Mode=OneWay}"
                                Text="{x:Bind service:LanguageService.GetResources('/Home/Fillin')}">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon
                                        Grid.Column="0"
                                        FontFamily="Segoe Fluent Icons"
                                        Glyph="&#xE74a;" />
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>
                            <MenuFlyoutItem
                                Command="{x:Bind ViewModel.CopyCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Tag}"
                                Icon="Copy"
                                IsEnabled="{x:Bind ViewModel.SelectedHistoryItem, Converter={StaticResource CheckNullConverter}, Mode=OneWay}"
                                Text="{x:Bind service:LanguageService.GetResources('/Home/Copy')}" />
                            <MenuFlyoutItem
                                Command="{x:Bind ViewModel.ViewAllCommand}"
                                Icon="ViewAll"
                                IsEnabled="{x:Bind ViewModel.SelectedHistoryItem, Converter={StaticResource CheckNullConverter}, Mode=OneWay}"
                                Text="{x:Bind service:LanguageService.GetResources('/Home/ViewAll')}" />
                        </MenuFlyout>
                    </ctWinUI:DataGrid.ContextFlyout>
                </ctWinUI:DataGrid>
            </Grid>
        </Expander.Content>
    </Expander>
</UserControl>
