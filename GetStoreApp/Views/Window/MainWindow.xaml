<WinUI:WASDKWindow
    x:Class="GetStoreApp.Views.Window.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:WinUI="using:GetStoreApp.Views.Window"
    xmlns:animatedvisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:wc="using:GetStoreApp.UI.Controls.Window"
    xmlns:window="using:GetStoreApp.Views.Window"
    Title="{x:Bind ResourceService.GetLocalized('AppDisplayName')}"
    MinWidth="600"
    MinHeight="768"
    Closing="{x:Bind ViewModel.WindowClosing}"
    TaskBarIcon="Assets/Logo/GetStoreApp.ico"
    mc:Ignorable="d">

    <Grid>
        <i:Interaction.Behaviors>
            <ic:EventTriggerBehavior EventName="Loaded">
                <ic:InvokeCommandAction Command="{x:Bind ViewModel.LoadedCommand}" />
            </ic:EventTriggerBehavior>
            <ic:EventTriggerBehavior EventName="Unloaded">
                <ic:InvokeCommandAction Command="{x:Bind ViewModel.UnloadedCommand}" />
            </ic:EventTriggerBehavior>
            <ic:EventTriggerBehavior EventName="SizeChanged">
                <ic:InvokeCommandAction Command="{x:Bind ViewModel.SizeChangedCommand}" />
            </ic:EventTriggerBehavior>
        </i:Interaction.Behaviors>

        <wc:AppTitleBarControl
            Height="45"
            Margin="{x:Bind ViewModel.AppTitleBarMargin, Mode=OneWay}"
            VerticalAlignment="Top" />

        <NavigationView
            IsBackEnabled="{x:Bind ViewModel.IsBackEnabled, Mode=OneWay}"
            IsPaneToggleButtonVisible="{x:Bind ViewModel.IsPaneToggleButtonVisible, Mode=OneWay}"
            IsSettingsVisible="False"
            IsTitleBarAutoPaddingEnabled="True"
            Loaded="{x:Bind ViewModel.NavigationViewLoaded}"
            OpenPaneLength="220"
            PaneDisplayMode="{x:Bind ViewModel.NavigationDispalyMode, Mode=OneWay}"
            SelectedItem="{x:Bind ViewModel.SelectedItem, Mode=OneWay}">

            <i:Interaction.Behaviors>
                <ic:EventTriggerBehavior EventName="BackRequested">
                    <ic:InvokeCommandAction Command="{x:Bind ViewModel.BackRequestedCommand}" />
                </ic:EventTriggerBehavior>
                <ic:EventTriggerBehavior EventName="ItemInvoked">
                    <ic:InvokeCommandAction Command="{x:Bind ViewModel.ItemInvokedCommand}" />
                </ic:EventTriggerBehavior>
            </i:Interaction.Behaviors>

            <NavigationView.MenuItems>
                <NavigationViewItemHeader Content="{x:Bind ResourceService.GetLocalized('/Window/Title')}" Foreground="{ThemeResource NavigationViewItemForeground}" />

                <NavigationViewItem Content="{x:Bind ResourceService.GetLocalized('/Window/Home')}" Tag="Home">
                    <NavigationViewItem.Icon>
                        <FontIcon Glyph="&#xE80f;" Style="{StaticResource SegoeFluentStyle}" />
                    </NavigationViewItem.Icon>
                </NavigationViewItem>

                <NavigationViewItem Content="{x:Bind ResourceService.GetLocalized('/Window/History')}" Tag="History">
                    <NavigationViewItem.Icon>
                        <FontIcon Glyph="&#xF738;" Style="{StaticResource SegoeFluentStyle}" />
                    </NavigationViewItem.Icon>
                </NavigationViewItem>

                <NavigationViewItem Content="{x:Bind ResourceService.GetLocalized('/Window/Download')}" Tag="Download">
                    <NavigationViewItem.Icon>
                        <FontIcon Glyph="&#xE896;" Style="{StaticResource SegoeFluentStyle}" />
                    </NavigationViewItem.Icon>
                </NavigationViewItem>

                <NavigationViewItem Content="{x:Bind ResourceService.GetLocalized('/Window/Web')}" Tag="Web">
                    <NavigationViewItem.Icon>
                        <FontIcon Glyph="&#xE774;" Style="{StaticResource SegoeFluentStyle}" />
                    </NavigationViewItem.Icon>
                </NavigationViewItem>
            </NavigationView.MenuItems>

            <NavigationView.FooterMenuItems>
                <NavigationViewItem Content="{x:Bind ResourceService.GetLocalized('/Window/About')}" Tag="About">
                    <NavigationViewItem.Icon>
                        <FontIcon Glyph="&#xE946;" Style="{StaticResource SegoeFluentStyle}" />
                    </NavigationViewItem.Icon>
                </NavigationViewItem>
                <NavigationViewItem Content="{x:Bind ResourceService.GetLocalized('/Window/Settings')}" Tag="Settings">
                    <NavigationViewItem.Icon>
                        <AnimatedIcon>
                            <AnimatedIcon.Source>
                                <animatedvisuals:AnimatedSettingsVisualSource />
                            </AnimatedIcon.Source>
                            <AnimatedIcon.FallbackIconSource>
                                <FontIconSource FontFamily="{StaticResource SegoeFluentFontFamily}" Glyph="&#xE713;" />
                            </AnimatedIcon.FallbackIconSource>
                        </AnimatedIcon>
                    </NavigationViewItem.Icon>
                </NavigationViewItem>
            </NavigationView.FooterMenuItems>

            <Frame x:Name="WindowFrame">
                <i:Interaction.Behaviors>
                    <ic:EventTriggerBehavior EventName="Navigated">
                        <ic:InvokeCommandAction Command="{x:Bind ViewModel.NavigatedCommand}" />
                    </ic:EventTriggerBehavior>
                    <ic:EventTriggerBehavior EventName="NavigationFailed">
                        <ic:InvokeCommandAction Command="{x:Bind ViewModel.NavigationFailedCommand}" />
                    </ic:EventTriggerBehavior>
                </i:Interaction.Behaviors>
            </Frame>
        </NavigationView>

        <window:TaskBarControl />
    </Grid>
</WinUI:WASDKWindow>
