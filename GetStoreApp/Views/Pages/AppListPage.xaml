<Page
    x:Class="GetStoreApp.Views.Pages.AppListPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:animatedvisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals"
    xmlns:applicationmodel="using:Windows.ApplicationModel"
    xmlns:backdrop="using:GetStoreApp.Extensions.Backdrop"
    xmlns:converter="using:GetStoreApp.Helpers.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:deployment="using:Microsoft.Windows.Management.Deployment"
    xmlns:enum="using:GetStoreApp.Extensions.DataType.Enums"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="using:GetStoreApp.Models"
    xmlns:rootservice="using:GetStoreApp.Services.Root"
    NavigationCacheMode="Enabled"
    mc:Ignorable="d">

    <Page.Resources>
        <SolidColorBrush x:Key="HyperlinkButtonBackgroundPointerOver" Color="Transparent" />
        <SolidColorBrush x:Key="HyperlinkButtonBackgroundPressed" Color="Transparent" />
        <SolidColorBrush x:Key="CommandBarBackgroundOpen" Color="Transparent" />
        <SolidColorBrush x:Key="CommandBarOverflowPresenterBackground" Color="Transparent" />
        <Thickness x:Key="CommandBarBorderThicknessOpen">0</Thickness>

        <XamlUICommand x:Name="OpenAppCommand" ExecuteRequested="{x:Bind OnOpenAppExecuteRequested}" />
        <XamlUICommand x:Name="OpenCacheFolderCommand" ExecuteRequested="{x:Bind OnOpenCacheFolderExecuteRequested}" />
        <XamlUICommand x:Name="OpenInstalledFolderCommand" ExecuteRequested="{x:Bind OnOpenInstalledFolderExecuteRequested}" />
        <XamlUICommand x:Name="OpenManifestCommand" ExecuteRequested="{x:Bind OnOpenManifestExecuteRequested}" />
        <XamlUICommand x:Name="OpenStoreCommand" ExecuteRequested="{x:Bind OnOpenStoreExecuteRequested}" />
        <XamlUICommand x:Name="MoveCommand" ExecuteRequested="{x:Bind OnMoveExecuteRequested}" />
        <XamlUICommand x:Name="RepairCommand" ExecuteRequested="{x:Bind OnRepairExecuteRequested}" />
        <XamlUICommand x:Name="ResetCommand" ExecuteRequested="{x:Bind OnResetExecuteRequested}" />
        <XamlUICommand x:Name="UninstallCommand" ExecuteRequested="{x:Bind OnUninstallExecuteRequested}" />
        <XamlUICommand x:Name="ViewInformationCommand" ExecuteRequested="{x:Bind OnViewInformationExecuteRequested}" />

        <backdrop:CommandBarSecondaryCommandsBackdrop x:Name="CommandBarSecondaryCommandsBackdrop" />
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!--  应用管理控制栏  -->
        <Grid
            Grid.Row="0"
            Height="60"
            Margin="30,5,30,3"
            Padding="16,8,0,8"
            Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
            BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
            BorderThickness="1"
            CornerRadius="{StaticResource ControlCornerRadius}">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <FontIcon
                Grid.Column="0"
                Margin="0,0,12,0"
                FontSize="16"
                Glyph="&#xE74C;" />

            <TextBlock
                Grid.Column="1"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Text="{x:Bind rootservice:ResourceService.GetLocalized('AppList/Operation')}" />
            <AppBarSeparator Grid.Column="2" Margin="10,0,10,0" />

            <TextBlock
                Grid.Column="3"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Text="{x:Bind rootservice:ResourceService.GetLocalized('AppList/PackageEmpty')}"
                Visibility="{x:Bind converter:ValueConverterHelper.IntToVisibilityReverseConvert(AppManagerCollection.Count), Mode=OneWay}" />

            <TextBlock
                Grid.Column="3"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Text="{x:Bind x:String.Format(PackageCountInfoString, AppManagerCollection.Count), Mode=OneWay}"
                Visibility="{x:Bind converter:ValueConverterHelper.IntToVisibilityConvert(AppManagerCollection.Count), Mode=OneWay}" />

            <AutoSuggestBox
                Grid.Column="4"
                Width="200"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                IsEnabled="{x:Bind GetIsLoading(AppManagerResultKind), Mode=OneWay}"
                PlaceholderText="{x:Bind rootservice:ResourceService.GetLocalized('AppList/PlaceHolderText')}"
                QuerySubmitted="{x:Bind OnQuerySubmitted}"
                Text="{x:Bind SearchText, Mode=OneWay}"
                TextChanged="{x:Bind OnTextChanged}">

                <AutoSuggestBox.QueryIcon>
                    <FontIcon FontSize="14" Glyph="&#xE71E;" />
                </AutoSuggestBox.QueryIcon>
            </AutoSuggestBox>

            <CommandBar
                Grid.Column="5"
                VerticalAlignment="Center"
                Background="Transparent"
                DefaultLabelPosition="Right"
                Loaded="{x:Bind CommandBarSecondaryCommandsBackdrop.OnLoaded}">

                <CommandBar.PrimaryCommands>
                    <AppBarButton
                        IsEnabled="{x:Bind GetIsLoading(AppManagerResultKind), Mode=OneWay}"
                        Label="{x:Bind rootservice:ResourceService.GetLocalized('AppList/Sort')}"
                        ToolTipService.ToolTip="{x:Bind rootservice:ResourceService.GetLocalized('AppList/SortToolTip')}">

                        <AppBarButton.Icon>
                            <FontIcon Glyph="&#xE8CB;" />
                        </AppBarButton.Icon>

                        <AppBarButton.Flyout>
                            <MenuFlyout Placement="Bottom">
                                <MenuFlyoutSubItem Text="{x:Bind rootservice:ResourceService.GetLocalized('AppList/SortWay')}">

                                    <RadioMenuFlyoutItem
                                        Click="{x:Bind OnSortWayClicked}"
                                        GroupName="SortWayRadioGroup"
                                        IsChecked="{x:Bind IsIncrease, Mode=OneWay}"
                                        Tag="True"
                                        Text="{x:Bind rootservice:ResourceService.GetLocalized('AppList/SortIncrease')}" />

                                    <RadioMenuFlyoutItem
                                        Click="{x:Bind OnSortWayClicked}"
                                        GroupName="SortWayRadioGroup"
                                        IsChecked="{x:Bind IsIncrease.Equals(x:False), Mode=OneWay}"
                                        Tag="False"
                                        Text="{x:Bind rootservice:ResourceService.GetLocalized('AppList/SortDecrease')}" />
                                </MenuFlyoutSubItem>

                                <MenuFlyoutSubItem Text="{x:Bind rootservice:ResourceService.GetLocalized('AppList/SortRule')}">

                                    <RadioMenuFlyoutItem
                                        Click="{x:Bind OnSortRuleClicked}"
                                        GroupName="SortRuleRadioGroup"
                                        IsChecked="{x:Bind x:Object.Equals(SelectedAppSortRuleKind, enum:AppSortRuleKind.DisplayName), Mode=OneWay}"
                                        Tag="{x:Bind enum:AppSortRuleKind.DisplayName}"
                                        Text="{x:Bind rootservice:ResourceService.GetLocalized('AppList/SortByDisplayName')}" />

                                    <RadioMenuFlyoutItem
                                        Click="{x:Bind OnSortRuleClicked}"
                                        GroupName="SortRuleRadioGroup"
                                        IsChecked="{x:Bind x:Object.Equals(SelectedAppSortRuleKind, enum:AppSortRuleKind.PublisherName), Mode=OneWay}"
                                        Tag="{x:Bind enum:AppSortRuleKind.PublisherName}"
                                        Text="{x:Bind rootservice:ResourceService.GetLocalized('AppList/SortByPublisher')}" />

                                    <RadioMenuFlyoutItem
                                        Click="{x:Bind OnSortRuleClicked}"
                                        GroupName="SortRuleRadioGroup"
                                        IsChecked="{x:Bind x:Object.Equals(SelectedAppSortRuleKind, enum:AppSortRuleKind.InstallDate), Mode=OneWay}"
                                        Tag="{x:Bind enum:AppSortRuleKind.InstallDate}"
                                        Text="{x:Bind rootservice:ResourceService.GetLocalized('AppList/SortByInstalledDate')}" />
                                </MenuFlyoutSubItem>
                            </MenuFlyout>
                        </AppBarButton.Flyout>
                    </AppBarButton>

                    <AppBarButton
                        IsEnabled="{x:Bind GetIsLoading(AppManagerResultKind), Mode=OneWay}"
                        Label="{x:Bind rootservice:ResourceService.GetLocalized('AppList/Filter')}"
                        ToolTipService.ToolTip="{x:Bind rootservice:ResourceService.GetLocalized('AppList/FilterToolTip')}">

                        <AppBarButton.Icon>
                            <FontIcon Glyph="&#xE71C;" />
                        </AppBarButton.Icon>

                        <AppBarButton.Flyout>
                            <Flyout
                                Closed="{x:Bind OnClosed}"
                                Placement="Bottom"
                                ShouldConstrainToRootBounds="False"
                                SystemBackdrop="{StaticResource AcrylicBackgroundFillColorDefaultBackdrop}">

                                <Flyout.FlyoutPresenterStyle>
                                    <Style BasedOn="{StaticResource DefaultFlyoutPresenterStyle}" TargetType="FlyoutPresenter">
                                        <Setter Property="Padding" Value="0" />
                                        <Setter Property="Background" Value="Transparent" />
                                    </Style>
                                </Flyout.FlyoutPresenterStyle>

                                <StackPanel Padding="12" Spacing="5">
                                    <TextBlock
                                        Margin="2,0,0,0"
                                        FontSize="14"
                                        Text="{x:Bind rootservice:ResourceService.GetLocalized('AppList/AppType')}" />

                                    <ToggleButton
                                        Click="{x:Bind OnFilterWayClicked}"
                                        Content="{x:Bind rootservice:ResourceService.GetLocalized('AppList/FrameworkPackage')}"
                                        IsChecked="{x:Bind IsAppFramework, Mode=OneWay}" />

                                    <MenuFlyoutSeparator Margin="4,0,6,0" Background="{ThemeResource SurfaceStrokeColorDefaultBrush}" />

                                    <TextBlock
                                        Margin="2,0,0,0"
                                        FontSize="14"
                                        Text="{x:Bind rootservice:ResourceService.GetLocalized('AppList/SignatureType')}" />

                                    <Grid ColumnSpacing="5" RowSpacing="5">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>

                                        <ToggleButton
                                            Grid.Row="0"
                                            Grid.Column="0"
                                            HorizontalAlignment="Stretch"
                                            Click="{x:Bind OnSignatureRuleClicked}"
                                            Content="{x:Bind rootservice:ResourceService.GetLocalized('AppList/SignatureStore')}"
                                            IsChecked="{x:Bind IsStoreSignatureSelected, Mode=OneWay}"
                                            Tag="{x:Bind applicationmodel:PackageSignatureKind.Store}" />

                                        <ToggleButton
                                            Grid.Row="0"
                                            Grid.Column="1"
                                            HorizontalAlignment="Stretch"
                                            Click="{x:Bind OnSignatureRuleClicked}"
                                            Content="{x:Bind rootservice:ResourceService.GetLocalized('AppList/SignatureSystem')}"
                                            IsChecked="{x:Bind IsSystemSignatureSelected, Mode=OneWay}"
                                            Tag="{x:Bind applicationmodel:PackageSignatureKind.System}" />

                                        <ToggleButton
                                            Grid.Row="0"
                                            Grid.Column="2"
                                            HorizontalAlignment="Stretch"
                                            Click="{x:Bind OnSignatureRuleClicked}"
                                            Content="{x:Bind rootservice:ResourceService.GetLocalized('AppList/SignatureEnterprise')}"
                                            IsChecked="{x:Bind IsEnterpriseSignatureSelected, Mode=OneWay}"
                                            Tag="{x:Bind applicationmodel:PackageSignatureKind.Enterprise}" />

                                        <ToggleButton
                                            Grid.Row="0"
                                            Grid.Column="3"
                                            HorizontalAlignment="Stretch"
                                            Click="{x:Bind OnSignatureRuleClicked}"
                                            Content="{x:Bind rootservice:ResourceService.GetLocalized('AppList/SignatureDeveloper')}"
                                            IsChecked="{x:Bind IsDeveloperSignatureSelected, Mode=OneWay}"
                                            Tag="{x:Bind applicationmodel:PackageSignatureKind.Developer}" />

                                        <ToggleButton
                                            Grid.Row="0"
                                            Grid.Column="4"
                                            HorizontalAlignment="Stretch"
                                            Click="{x:Bind OnSignatureRuleClicked}"
                                            Content="{x:Bind rootservice:ResourceService.GetLocalized('AppList/SignatureNone')}"
                                            IsChecked="{x:Bind IsNoneSignatureSelected, Mode=OneWay}"
                                            Tag="{x:Bind applicationmodel:PackageSignatureKind.None}" />
                                    </Grid>
                                </StackPanel>
                            </Flyout>
                        </AppBarButton.Flyout>
                    </AppBarButton>

                    <AppBarButton
                        Click="{x:Bind OnRefreshClicked}"
                        IsEnabled="{x:Bind GetIsLoading(AppManagerResultKind), Mode=OneWay}"
                        Label="{x:Bind rootservice:ResourceService.GetLocalized('AppList/Refresh')}">

                        <AppBarButton.Icon>
                            <FontIcon Glyph="&#xE72C;" />
                        </AppBarButton.Icon>
                    </AppBarButton>
                </CommandBar.PrimaryCommands>

                <CommandBar.SecondaryCommands>
                    <AppBarButton Click="{x:Bind OnInstalledAppsClicked}" Label="{x:Bind rootservice:ResourceService.GetLocalized('AppList/InstalledApps')}">
                        <AppBarButton.Icon>
                            <FontIcon Glyph="&#xE71D;" />
                        </AppBarButton.Icon>
                    </AppBarButton>

                    <AppBarButton Click="{x:Bind OnDeveloperOptionsClicked}" Label="{x:Bind rootservice:ResourceService.GetLocalized('AppList/DeveloperOptions')}">
                        <AppBarButton.Icon>
                            <FontIcon Glyph="&#xEC7A;" />
                        </AppBarButton.Icon>
                    </AppBarButton>

                    <AppBarButton Click="{x:Bind OnPackageVolumeConfigurationClicked}" Label="{x:Bind rootservice:ResourceService.GetLocalized('AppList/PackageVolumeConfiguration')}">
                        <AppBarButton.Icon>
                            <FontIcon Glyph="&#xEDA2;" />
                        </AppBarButton.Icon>
                    </AppBarButton>
                </CommandBar.SecondaryCommands>
            </CommandBar>
        </Grid>

        <!--  应用管理状态显示栏  -->
        <Grid
            Grid.Row="1"
            Height="60"
            Margin="30,0,30,0"
            Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
            BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
            BorderThickness="1"
            CornerRadius="{StaticResource ControlCornerRadius}"
            Visibility="{x:Bind GetAppManagerSuccessfullyState(AppManagerResultKind, x:False), Mode=OneWay}">

            <Grid>
                <!--  正在加载中  -->
                <StackPanel
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Orientation="Horizontal"
                    Spacing="10"
                    Visibility="{x:Bind CheckAppManagerState(AppManagerResultKind, enum:AppManagerResultKind.Loading), Mode=OneWay}">

                    <ProgressRing IsActive="True" IsEnabled="True" />

                    <TextBlock
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Text="{x:Bind rootservice:ResourceService.GetLocalized('AppList/LoadingApps')}"
                        TextAlignment="Center" />
                </StackPanel>

                <!--  加载失败（包含搜索结果为空）  -->
                <TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="{x:Bind AppManagerFailedContent, Mode=OneWay}"
                    TextAlignment="Center"
                    Visibility="{x:Bind CheckAppManagerState(AppManagerResultKind, enum:AppManagerResultKind.Failed), Mode=OneWay}" />
            </Grid>
        </Grid>

        <!--  应用管理结果展示项目控件  -->
        <ListView
            Grid.Row="2"
            Padding="30,0,30,30"
            ItemsSource="{x:Bind AppManagerCollection}"
            SelectionMode="None"
            Visibility="{x:Bind GetAppManagerSuccessfullyState(AppManagerResultKind, x:True), Mode=OneWay}">

            <ListView.ItemContainerStyle>
                <Style BasedOn="{StaticResource DefaultListViewItemStyle}" TargetType="ListViewItem">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Margin" Value="0" />
                    <Setter Property="MinHeight" Value="0" />
                    <Setter Property="Padding" Value="0" />
                </Style>
            </ListView.ItemContainerStyle>

            <ItemsControl.ItemContainerTransitions>
                <TransitionCollection />
            </ItemsControl.ItemContainerTransitions>

            <ListView.ItemTemplate>
                <DataTemplate x:DataType="model:PackageModel">
                    <Grid Margin="0,0,0,2">
                        <Grid
                            Height="60"
                            Padding="16,0"
                            Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
                            BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                            BorderThickness="1"
                            ColumnSpacing="10"
                            CornerRadius="{StaticResource ControlCornerRadius}">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="40" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Grid
                                Grid.Column="0"
                                Width="30"
                                Height="30"
                                Margin="0,-6,0,-6"
                                HorizontalAlignment="Left"
                                Background="{ThemeResource CardStrokeColorDefaultBrush}"
                                BorderThickness="1"
                                CornerRadius="{StaticResource ControlCornerRadius}">

                                <ImageIcon>
                                    <ImageIcon.Source>
                                        <BitmapImage UriSource="{x:Bind LogoImage, Mode=OneWay}" />
                                    </ImageIcon.Source>
                                </ImageIcon>
                            </Grid>

                            <StackPanel
                                Grid.Column="1"
                                VerticalAlignment="Center"
                                Orientation="Vertical">

                                <TextBlock
                                    HorizontalAlignment="Left"
                                    IsTextSelectionEnabled="True"
                                    Style="{StaticResource BodyTextBlockStyle}"
                                    Text="{x:Bind DisplayName}"
                                    TextTrimming="CharacterEllipsis"
                                    TextWrapping="NoWrap" />

                                <TextBlock
                                    HorizontalAlignment="Left"
                                    Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                                    IsTextSelectionEnabled="True"
                                    Style="{StaticResource CaptionTextBlockStyle}"
                                    TextTrimming="CharacterEllipsis"
                                    TextWrapping="NoWrap">

                                    <Run Text="{x:Bind PublisherDisplayName}" />
                                    <Run Text=" | " />
                                    <Run Text="{x:Bind Version}" />
                                    <Run Text=" | " />
                                    <Run Text="{x:Bind InstallDate}" />
                                </TextBlock>

                                <ToolTipService.ToolTip>
                                    <ToolTip MaxWidth="9999">
                                        <StackPanel>
                                            <TextBlock>
                                                <Run Text="{x:Bind rootservice:ResourceService.GetLocalized('AppList/DisplayName')}" />
                                                <Run Text="{x:Bind DisplayName}" />
                                            </TextBlock>

                                            <TextBlock>
                                                <Run Text="{x:Bind rootservice:ResourceService.GetLocalized('AppList/PublisherDisplayName')}" />
                                                <Run Text="{x:Bind PublisherDisplayName}" />
                                            </TextBlock>

                                            <TextBlock>
                                                <Run Text="{x:Bind rootservice:ResourceService.GetLocalized('AppList/Version')}" />
                                                <Run Text="{x:Bind Version}" />
                                            </TextBlock>

                                            <TextBlock>
                                                <Run Text="{x:Bind rootservice:ResourceService.GetLocalized('AppList/InstalledDate')}" />
                                                <Run Text="{x:Bind InstallDate}" />
                                            </TextBlock>
                                        </StackPanel>
                                    </ToolTip>
                                </ToolTipService.ToolTip>
                            </StackPanel>

                            <SplitButton
                                Grid.Column="2"
                                Command="{StaticResource ViewInformationCommand}"
                                CommandParameter="{x:Bind}"
                                Content="{x:Bind rootservice:ResourceService.GetLocalized('AppList/View')}"
                                ToolTipService.ToolTip="{x:Bind rootservice:ResourceService.GetLocalized('AppList/ViewToolTip')}">

                                <SplitButton.Flyout>
                                    <MenuFlyout Placement="Bottom">
                                        <MenuFlyoutItem
                                            Command="{StaticResource OpenAppCommand}"
                                            CommandParameter="{x:Bind Package}"
                                            Text="{x:Bind rootservice:ResourceService.GetLocalized('AppList/OpenApp')}"
                                            Visibility="{x:Bind converter:ValueConverterHelper.IntToVisibilityConvert(AppListEntryCount)}">

                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xEB3B;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem
                                            Command="{StaticResource OpenStoreCommand}"
                                            CommandParameter="{x:Bind Package}"
                                            Text="{x:Bind rootservice:ResourceService.GetLocalized('AppList/OpenStore')}"
                                            Visibility="{x:Bind converter:ValueCheckConverterHelper.IsStorePackage(SignatureKind)}">

                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE719;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem
                                            Command="{StaticResource OpenManifestCommand}"
                                            CommandParameter="{x:Bind Package}"
                                            Text="{x:Bind rootservice:ResourceService.GetLocalized('AppList/OpenManifest')}">

                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8A5;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutSubItem Text="{x:Bind rootservice:ResourceService.GetLocalized('AppList/OpenFolder')}">

                                            <MenuFlyoutSubItem.Icon>
                                                <FontIcon Glyph="&#xE8B7;" />
                                            </MenuFlyoutSubItem.Icon>

                                            <MenuFlyoutItem
                                                Command="{StaticResource OpenInstalledFolderCommand}"
                                                CommandParameter="{x:Bind Package}"
                                                Text="{x:Bind rootservice:ResourceService.GetLocalized('AppList/OpenInstalledFolder')}" />

                                            <MenuFlyoutItem
                                                Command="{StaticResource OpenCacheFolderCommand}"
                                                CommandParameter="{x:Bind Package}"
                                                Text="{x:Bind rootservice:ResourceService.GetLocalized('AppList/OpenCacheFolder')}" />
                                        </MenuFlyoutSubItem>

                                        <MenuFlyoutSeparator />

                                        <MenuFlyoutItem
                                            Command="{StaticResource MoveCommand}"
                                            CommandParameter="{x:Bind}"
                                            IsEnabled="{x:Bind IsOperating.Equals(x:False), Mode=OneWay}"
                                            Text="{x:Bind rootservice:ResourceService.GetLocalized('AppList/Move')}"
                                            Visibility="{x:Bind converter:ValueCheckConverterHelper.IsNotSystemPackage(SignatureKind)}">

                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8AB;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem
                                            Command="{StaticResource RepairCommand}"
                                            CommandParameter="{x:Bind}"
                                            IsEnabled="{x:Bind IsOperating.Equals(x:False), Mode=OneWay}"
                                            Text="{x:Bind rootservice:ResourceService.GetLocalized('AppList/Repair')}">

                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE90F;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem
                                            Command="{StaticResource ResetCommand}"
                                            CommandParameter="{x:Bind}"
                                            IsEnabled="{x:Bind IsOperating.Equals(x:False), Mode=OneWay}"
                                            Text="{x:Bind rootservice:ResourceService.GetLocalized('AppList/Reset')}">

                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE845;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem
                                            Command="{StaticResource UninstallCommand}"
                                            CommandParameter="{x:Bind}"
                                            IsEnabled="{x:Bind IsOperating.Equals(x:False), Mode=OneWay}"
                                            Text="{x:Bind rootservice:ResourceService.GetLocalized('AppList/Uninstall')}"
                                            Visibility="{x:Bind converter:ValueCheckConverterHelper.IsNotSystemPackage(SignatureKind)}">

                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE74D;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>
                                    </MenuFlyout>
                                </SplitButton.Flyout>
                            </SplitButton>
                        </Grid>

                        <ProgressBar
                            Margin="16,0"
                            VerticalAlignment="Bottom"
                            IsIndeterminate="False"
                            Visibility="{x:Bind IsOperating, Mode=OneWay}"
                            Value="{x:Bind PackageOperationProgress, Mode=OneWay}" />
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
    </Grid>
</Page>
