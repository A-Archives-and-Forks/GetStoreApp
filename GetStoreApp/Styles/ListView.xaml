<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style BasedOn="{StaticResource DefaultListViewItemStyle}" TargetType="ListViewItem" />

    <Style
        x:Key="DataGridListViewItemStyle"
        BasedOn="{StaticResource DefaultListViewItemStyle}"
        TargetType="ListViewItem">
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="Background" Value="{ThemeResource ListViewItemBackground}" />
        <Setter Property="Foreground" Value="{ThemeResource ListViewItemForeground}" />
        <Setter Property="TabNavigation" Value="Local" />
        <Setter Property="IsHoldingEnabled" Value="True" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="AllowDrop" Value="False" />
        <Setter Property="UseSystemFocusVisuals" Value="True" />
        <Setter Property="FocusVisualMargin" Value="0" />
        <Setter Property="FocusVisualPrimaryBrush" Value="{ThemeResource ListViewItemFocusVisualPrimaryBrush}" />
        <Setter Property="FocusVisualPrimaryThickness" Value="2" />
        <Setter Property="FocusVisualSecondaryBrush" Value="{ThemeResource ListViewItemFocusVisualSecondaryBrush}" />
        <Setter Property="FocusVisualSecondaryThickness" Value="1" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <ListViewItemPresenter
                        x:Name="Root"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        CheckBoxBorderBrush="{ThemeResource ListViewItemCheckBoxBorderBrush}"
                        CheckBoxBrush="{ThemeResource ListViewItemCheckBoxBrush}"
                        CheckBoxCornerRadius="{ThemeResource ListViewItemCheckBoxCornerRadius}"
                        CheckBoxDisabledBorderBrush="{ThemeResource ListViewItemCheckBoxDisabledBorderBrush}"
                        CheckBoxDisabledBrush="{ThemeResource ListViewItemCheckBoxDisabledBrush}"
                        CheckBoxPointerOverBorderBrush="{ThemeResource ListViewItemCheckBoxPointerOverBorderBrush}"
                        CheckBoxPointerOverBrush="{ThemeResource ListViewItemCheckBoxPointerOverBrush}"
                        CheckBoxPressedBorderBrush="{ThemeResource ListViewItemCheckBoxPressedBorderBrush}"
                        CheckBoxPressedBrush="{ThemeResource ListViewItemCheckBoxPressedBrush}"
                        CheckBoxSelectedBrush="{ThemeResource ListViewItemCheckBoxSelectedBrush}"
                        CheckBoxSelectedDisabledBrush="{ThemeResource ListViewItemCheckBoxSelectedDisabledBrush}"
                        CheckBoxSelectedPointerOverBrush="{ThemeResource ListViewItemCheckBoxSelectedPointerOverBrush}"
                        CheckBoxSelectedPressedBrush="{ThemeResource ListViewItemCheckBoxSelectedPressedBrush}"
                        CheckBrush="{ThemeResource ListViewItemCheckBrush}"
                        CheckDisabledBrush="{ThemeResource ListViewItemCheckDisabledBrush}"
                        CheckMode="{ThemeResource ListViewItemCheckMode}"
                        CheckPressedBrush="{ThemeResource ListViewItemCheckPressedBrush}"
                        ContentMargin="{TemplateBinding Padding}"
                        ContentTransitions="{TemplateBinding ContentTransitions}"
                        Control.IsTemplateFocusTarget="True"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                        DragBackground="{ThemeResource ListViewItemDragBackground}"
                        DragForeground="{ThemeResource ListViewItemDragForeground}"
                        DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                        FocusBorderBrush="{ThemeResource ListViewItemFocusBorderBrush}"
                        FocusSecondaryBorderBrush="{ThemeResource ListViewItemFocusSecondaryBorderBrush}"
                        FocusVisualMargin="{TemplateBinding FocusVisualMargin}"
                        FocusVisualPrimaryBrush="{TemplateBinding FocusVisualPrimaryBrush}"
                        FocusVisualPrimaryThickness="{TemplateBinding FocusVisualPrimaryThickness}"
                        FocusVisualSecondaryBrush="{TemplateBinding FocusVisualSecondaryBrush}"
                        FocusVisualSecondaryThickness="{TemplateBinding FocusVisualSecondaryThickness}"
                        PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackground}"
                        PointerOverBackground="{ThemeResource ListViewItemBackgroundPointerOver}"
                        PointerOverForeground="{ThemeResource ListViewItemForegroundPointerOver}"
                        PressedBackground="{ThemeResource ListViewItemBackgroundPressed}"
                        ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                        SelectedBackground="{ThemeResource ListViewItemBackgroundSelected}"
                        SelectedDisabledBackground="{ThemeResource ListViewItemBackgroundSelectedDisabled}"
                        SelectedForeground="{ThemeResource ListViewItemForegroundSelected}"
                        SelectedPointerOverBackground="{ThemeResource ListViewItemBackgroundSelectedPointerOver}"
                        SelectedPressedBackground="{ThemeResource ListViewItemBackgroundSelectedPressed}"
                        SelectionCheckMarkVisualEnabled="{ThemeResource ListViewItemSelectionCheckMarkVisualEnabled}"
                        SelectionIndicatorBrush="{ThemeResource ListViewItemSelectionIndicatorBrush}"
                        SelectionIndicatorCornerRadius="{ThemeResource ListViewItemSelectionIndicatorCornerRadius}"
                        SelectionIndicatorDisabledBrush="{ThemeResource ListViewItemSelectionIndicatorDisabledBrush}"
                        SelectionIndicatorPointerOverBrush="{ThemeResource ListViewItemSelectionIndicatorPointerOverBrush}"
                        SelectionIndicatorPressedBrush="{ThemeResource ListViewItemSelectionIndicatorPressedBrush}"
                        SelectionIndicatorVisualEnabled="{ThemeResource ListViewItemSelectionIndicatorVisualEnabled}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CardListViewItemContainerStyle" TargetType="ListViewItem">
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="TabNavigation" Value="Local" />
        <Setter Property="IsHoldingEnabled" Value="False" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Padding" Value="0,0,0,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border x:Name="OuterContainer" RenderTransformOrigin="0.5,0.5">
                        <Border.RenderTransform>
                            <ScaleTransform x:Name="ContentScaleTransform" />
                        </Border.RenderTransform>
                        <Grid x:Name="ReorderHintContent" Background="Transparent">
                            <Border
                                x:Name="CheckboxOuterContainer"
                                Margin="{ThemeResource ListPickerFlyoutPresenterMultiselectCheckBoxMargin}"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top">
                                <Border.Clip>
                                    <RectangleGeometry Rect="0,0,25.5,25.5" />
                                </Border.Clip>
                                <Grid x:Name="CheckboxContainer">
                                    <Grid.RenderTransform>
                                        <TranslateTransform x:Name="CheckboxContainerTranslateTransform" X="{ThemeResource ListViewItemContentOffsetX}" />
                                    </Grid.RenderTransform>
                                    <Rectangle
                                        x:Name="NormalRectangle"
                                        Width="25.5"
                                        Height="25.5"
                                        Fill="{ThemeResource CheckBoxBackgroundThemeBrush}"
                                        Stroke="{ThemeResource CheckBoxBorderThemeBrush}"
                                        StrokeThickness="{ThemeResource CheckBoxBorderThemeThickness}" />
                                    <Path
                                        x:Name="CheckGlyph"
                                        Width="18.5"
                                        Height="17"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="M0,123 L39,93 L124,164 L256,18 L295,49 L124,240 z"
                                        Fill="{ThemeResource CheckBoxForegroundThemeBrush}"
                                        FlowDirection="LeftToRight"
                                        IsHitTestVisible="False"
                                        Opacity="0"
                                        Stretch="Fill"
                                        StrokeLineJoin="Round"
                                        StrokeThickness="2.5" />
                                </Grid>
                            </Border>
                            <Border x:Name="ContentContainer">
                                <Border
                                    x:Name="ContentBorder"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                    <Border.RenderTransform>
                                        <TranslateTransform x:Name="ContentBorderTranslateTransform" />
                                    </Border.RenderTransform>
                                    <Grid>
                                        <ContentPresenter
                                            x:Name="contentPresenter"
                                            Margin="{TemplateBinding Padding}"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Content="{TemplateBinding Content}"
                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                            ContentTransitions="{TemplateBinding ContentTransitions}"
                                            Style="{ThemeResource FlyoutPickerListViewItemContentPresenterStyle}" />
                                        <!--
                                            The 'Xg' text simulates the amount of space one line of text will occupy.
                                            In the DataPlaceholder state, the Content is not loaded yet so we
                                            approximate the size of the item using placeholder text.
                                        -->
                                        <TextBlock
                                            x:Name="PlaceholderTextBlock"
                                            Margin="{TemplateBinding Padding}"
                                            AutomationProperties.AccessibilityView="Raw"
                                            Foreground="{x:Null}"
                                            IsHitTestVisible="False"
                                            Opacity="0"
                                            Text="Xg" />
                                        <Rectangle
                                            x:Name="PlaceholderRect"
                                            Fill="{ThemeResource FlyoutBackgroundThemeBrush}"
                                            IsHitTestVisible="False"
                                            Visibility="Collapsed" />
                                    </Grid>
                                </Border>
                            </Border>
                            <Border
                                x:Name="SelectedBorder"
                                BorderBrush="{ThemeResource ListViewItemSelectedBackgroundThemeBrush}"
                                BorderThickness="{ThemeResource GridViewItemMultiselectBorderThickness}"
                                IsHitTestVisible="False"
                                Opacity="0">
                                <Grid
                                    x:Name="SelectedCheckMark"
                                    Width="34"
                                    Height="34"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Top"
                                    Opacity="0">
                                    <Path
                                        x:Name="SelectedEarmark"
                                        Data="M0,0 L40,0 L40,40 z"
                                        Fill="{ThemeResource ListViewItemSelectedBackgroundThemeBrush}"
                                        Stretch="Fill" />
                                    <Path
                                        x:Name="SelectedGlyph"
                                        Width="17"
                                        Height="14.5"
                                        Margin="0,1,1,0"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Top"
                                        Data="M0,123 L39,93 L124,164 L256,18 L295,49 L124,240 z"
                                        Fill="{ThemeResource ListViewItemCheckThemeBrush}"
                                        FlowDirection="LeftToRight"
                                        Stretch="Fill" />
                                </Grid>
                            </Border>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="CheckboxPressed" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="contentPresenter"
                                            Storyboard.TargetProperty="Opacity"
                                            To="{ThemeResource ListViewItemDisabledThemeOpacity}"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="CheckGlyph"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="SelectedCheckMark"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="contentPresenter"
                                            Storyboard.TargetProperty="Foreground"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ListPickerFlyoutPresenterSelectedItemForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ListPickerFlyoutPresenterSelectedItemBackgroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="CheckGlyph"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="SelectedCheckMark"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DataVirtualizationStates">
                                <VisualState x:Name="DataAvailable" />
                                <VisualState x:Name="DataPlaceholder">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="PlaceholderTextBlock"
                                            Storyboard.TargetProperty="Visibility"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="PlaceholderRect"
                                            Storyboard.TargetProperty="Visibility"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="MultiSelectStates">
                                <VisualState x:Name="NoMultiSelect" />
                                <VisualState x:Name="ListMultiSelect">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="CheckboxContainerTranslateTransform"
                                            Storyboard.TargetProperty="X"
                                            To="0"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="ContentBorderTranslateTransform"
                                            Storyboard.TargetProperty="X"
                                            To="25.5"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="GridMultiSelect" />
                                <VisualStateGroup.Transitions>
                                    <VisualTransition
                                        GeneratedDuration="0:0:0.15"
                                        From="ListMultiSelect"
                                        To="NoMultiSelect" />
                                    <VisualTransition
                                        GeneratedDuration="0:0:0.15"
                                        From="NoMultiSelect"
                                        To="ListMultiSelect" />
                                </VisualStateGroup.Transitions>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="HighlightStates">
                                <VisualState x:Name="NoHighlight" />
                                <VisualState x:Name="Highlighted">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="contentPresenter"
                                            Storyboard.TargetProperty="Foreground"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ListPickerFlyoutPresenterSelectedItemForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ListPickerFlyoutPresenterSelectedItemBackgroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
